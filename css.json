// in VSC 
// ctrl + shift + p
// snippets: configure snippets
// enter
// css
// enter
// paste following Code :
{
"newClass": {
	"prefix": "newClass",
	"body": [
		".${1:example} {",
		"${2:example}: ${3:example};",
		"}"
	],
	"description": "cssClass"
},
"targetPreviousSiblings": {
	"prefix": "previousSiblings",
	"body": [
		"// target previous Siblings + target ",
		"${1:parent}:has(${3::hover}) * > :not(${2:target}${3::hover} ~ ${2:target}) {",
		"    ${4:background-color}: ${5:hsla(0, 0%, 27%, 1)};",
		"}"
	],
	"description": "targetPreviousSiblings"
},
"targetNextSiblings": {
	"prefix": "nextSiblings",
	"body": [
		"// target following siblings",
		"${1:parent} > * > ${2:target}${3::hover} ~ ${2:target} {",
		"   ${4:background-color}: ${5:hsla(0, 0%, 27%, 1)};",
		"}"
	],
	"description": "targetNextSiblings"
},
"vertical-expand-grid": {
	"prefix": "vertical-expand-grid",
	"body": [
		".vertical-expand-grid {",
		"    ${1:outline:1px solid white;}",
		"    display: grid;",
		"    grid-template: 1fr / 1fr;",
		"    transition: grid-template-rows 400ms ease, grid-template-columns 400ms ease;",
		"    &:hover {",
		"        grid-template: 0fr / 1fr;",
		"    }",
		"    & * {",
		"        overflow: hidden;",
		"    }",
		"}"
	],
	"description": "vertical-expand-grid"
},
"cssBody": {
	"prefix": "cssBody",
	"body": [
		".body__content-wrapper {",
		"",
		"  container: bodyContentWrapper / inline-size;",
		"",
		"  --_padding: var(--padding, max(1.5rem, 4%));",
		"  --_max-width: var(--max-width, 1140px); /* 1140px */",
		"    width: min(var(--_max-width), 100% - (var(--_padding) * 2));",
		"    /* ",
		"    --max-width: ${1:1200px};",
		"    --padding: ${2:max(1.5rem, 4%)}",
		"    */                                                         ",
		"    @media (width <= 850px) {",
		"    --padding: var(--p-xs, clamp(0.5rem, 2%, 0.75rem));",
		"    }",
		"}"
	],
	"description": "cssBody"
},
"planItem": {
	"prefix": "planItem",
	"body": [
		".${1:plan} {",
		"--_${1:shadow}: var(--${1:shadow}, black);",
		"--_${2:icon}: var(--${2:icon}, black);",
		"--_${3:button-hover}: var(--${3:button-hover}, black);",
		"}",
		"",
		".${1:plan}__${2:icon} {",
		"  fill: var(--_${2:icon});",
		"}",
		"",
		""
	],
	"description": "cssPlanItem"
},
"centerGrid": {
	"prefix": "centerGrid",
	"body": [
		"display: grid;",
		"place-items: center;"
	],
	"description": "centerGrid"
},
"centerFlex": {
	"prefix": "centerFlex",
	"body": [
		"display: flex;",
		"justify-content: center;",
		"align-items: center;"
	],
	"description": "centerFlex"
},
"centerRel": {
	"prefix": "centerRel",
	"body": [
		"/* parent has to be Position Relative */",
		"position: absolute;",
		"top: 50%;",
		"left: 50%;",
		"transform: translate(-50%, -50%);"
	],
	"description": "centerRel"
},
"hypCss": {
	"prefix": "hypCss",
	"body": [
		"            --_a:${1:your a value} ;",
		"            --_b:${2:your b value} ;",
		"            --_aSquare: calc(var(--_a) * var(--_a));",
		"            --_bSquare: calc(var(--_b) * var(--_b));",
		"            --_cSquare: calc(var(--_aSquare) + var(--_bSquare));",
		"            --_c: calc(sqrt(var(--_cSquare)));"
	],
	"description": "hypCss"
},
"clipPath3": {
	"prefix": "clip-path-3",
	"body": [
		"clip-path: polygon(",
		"${1:50}${7:%} ${2:0}${7:%},",
		"${3:0}${7:%} ${4:100}${7:%},",
		"${5:0}${7:%} ${6:100}${7:%}",
		")",
		";",
		"",
		""
	],
	"description": "clipPath"
},
"clipPath4": {
	"prefix": "clip-path-4",
	"body": [
		"clip-path: polygon(",
		"${1:50}${9:%} ${2:0}${9:%},",
		"${3:0}${9:%} ${4:100}${9:%},",
		"${5:0}${9:%} ${6:100}${9:%},",
		"${7:0}${9:%} ${8:100}${9:%}",
		")",
		";",
		"",
		""
	],
	"description": "clipPath"
},
"clipPath5": {
	"prefix": "clip-path-5",
	"body": [
		"clip-path: polygon(",
		"${1:50}${11:%} ${2:0}${11:%},",
		"${3:0}${11:%} ${4:100}${11:%},",
		"${5:0}${11:%} ${6:100}${11:%},",
		"${7:0}${11:%} ${8:100}${11:%},",
		"${9:0}${11:%} ${10:100}${11:%}",
		")",
		";",
		"",
		""
	],
	"description": "clipPath"
},
"text-gradient": {
	"prefix": "text-gradient",
	"body": [
		"      --gradient-from: ${1:black} ;",
		"      --gradient-to: ${2:white};",
		"      --linear-gradient: ${3:bottom};",
		"      background: linear-gradient(to var(--linear-gradient, bottom), var(--gradient-from, green), var(--gradient-to, white));",
		"      -webkit-background-clip: text;",
		"      -webkit-text-fill-color: transparent;"
	],
	"description": "text-gradient"
},
"cssEllipsis": {
	"prefix": "ellipsis",
	"body": [
		"                        display: -webkit-box;",
		"                        -webkit-box-orient: vertical;",
		"                        -webkit-line-clamp: 1;",
		"                        overflow: hidden;",
		"                        text-overflow: ellipsis;"
	],
	"description": "cssEllipsis"
},
"CSS-Scrollbar": {
	"prefix": "scrollbarcss",
	"body": [
		".${1:class}::webkit-scrollbar {",
		"      width: 0.5rem;",
		"      height: 0.5rem;",
		"}",
		"",
		".${1:class}::webkit-scrollbar-thumb {",
		"      border-radius: .5rem;",
		"      background-color: #0004;",
		"      visibility: hidden;",
		"}",
		"",
		".${1:class}:hover::webkit-scrollbar-thumb {",
		"       visibility: visible; ",
		"}"
	],
	"description": "CSS-Scrollbar"
},
"CSS-Image": {
	"prefix": "image",
	"body": [
		"background: url(${1:/assets/images/infinity-loop.jpg}) center / cover;"
	],
	"description": "CSS-Image"
},
"cssContainerQueryTemp": {
	"prefix": "container",
	"body": [
		".container {",
		"      container: var(--container,) / inline-size;",
		"      display: block;",
		"      grid-area: var(--grid-area);",
		"      grid-column: var(--grid-column);",
		"      grid-row: var(--grid-row);",
		"}"
	],
	"description": "cssContainerQueryTemp"
},
"Farbpalette": {
	"prefix": "colors",
	"body": [
		"                        /* Purple */",
		"                        color: hsl(270, 50%, 36%); /* Deep   / Dark   */",
		"                        color: hsl(270, 50%, 40%); /* Base   / Medium */",
		"                        color: hsl(270, 51%, 46%); /* Bright / Light  */",
		"      ",
		"                        /* Sy3be4 */",
		"                        color: hsl(197, 71%, 73%); /* Deep   / Dark   */",
		"                        color: hsl(201, 100%, 79%); /* Base   / Medium */",
		"                        color: hsl(206, 100%, 79%); /* Bright / Light  */",
		"                        ",
		"                        /*Taubenblau */",
		"                        color: hsl(211, 45%, 41%); /* Deep   / Dark   */",
		"                        color: hsl(211, 47%, 51%); /* Base   / Medium */",
		"                        color: hsl(211, 71%, 61%); /* Bright / Light  */",
		"                        ",
		"                        /* Green */",
		"                        color: hsl(121, 82%, 36%); /* Deep   / Dark   */   /* booleaner --secondary */",
		"                        color: hsl(121, 82%, 44%); /* Base   / Medium */ ",
		"                        color: hsl(121, 91%, 52%); /* Bright / Light  */",
		"      ",
		"                        /* Orange */",
		"                        color: hsl(28, 66%, 47%); /* Deep   / Dark   */   /* booleaner --primary */",
		"                        color: hsl(28, 86%, 56%); /* Base   / Medium */ ",
		"                        color: hsl(31, 100%, 60%); /* Bright / Light  */",
		"      ",
		"                        /* Red */",
		"                        color: hsl(0, 100%, 25%); /* Deep   / Dark   */",
		"                        color: hsl(0, 100%, 40%); /* Base   / Medium */",
		"                        color: hsl(0, 100%, 50%); /* Bright / Light  */",
		"      ",
		"                        /* Black */",
		"                        color: hsl(0, 0%, 12%); /* Deep   / Dark   */",
		"                        color: hsl(0, 0%, 18%); /* Base   / Medium */",
		"                        color: hsl(0, 0%, 27%); /* semiBright   / semiLight */",
		"                        color: hsl(0, 0%, 42%); /* Bright / Light  */",
		"",
		"",
		"                        /* Linux  */",
		"                        --cta-text: #ffa12f;",
		"                        --cta-icon: #85a8e1 ;",
		"                        ",
		"                        --text: #d6d6d6;",
		"                        --text-semi-headings: #4c9ac7;",
		"                        ",
		"                        --selection-text: #4dead0;",
		"",
		"                        --bg: hsl(200, 10%, 11%);"
	],
	"description": "Farbpalette"
},
"clrTest": {
	"prefix": "colortest",
	"body": [
		"color: hsl(211, 45%, 41%);"
	],
	"description": "clrTest"
},
"bgclrTest": {
	"prefix": "bgcolortest",
	"body": [
		"color: hsl(211, 45%, 41%);"
	],
	"description": "bgclrTest"
},
"TableBackup": {
	"prefix": "tablebackup",
	"body": [
		":root {",
		"            --clr-table-headings-border: skyblue;",
		"            --clr-table-headings-shadow: 0 1px 3px -1px var(--clr-table-headings-border), 0 -1px 3px -1px var(--clr-table-headings-border);",
		"            --clr-table-cells-border: rgb(102, 146, 163);",
		"            --clr-table-cells-shadow: 0 1px 3px -1px var(--clr-table-cells-border), 0 -1px 3px -1px var(--clr-table-cells-border);",
		"}",
		"",
		"/* custom-table tr > [data-cell=\"start\"]{",
		"      color: red;",
		"}",
		"",
		"custom-table[has-overflow=\"true\"] > tr > td {",
		"      color: green;",
		"}",
		"",
		"custom-table[has-overflow=\"false\"] {",
		"      grid-template-columns: auto ;",
		"}",
		"",
		"::part(table tr) {",
		"      color: green;",
		"} */",
		"",
		"custom-table {",
		"      --bq-mobile-heading-width: 5rem;",
		"      border: 3px solid black;",
		"      tr {",
		"            & td:last-child {",
		"                  &::empty {",
		"                  color: red;",
		"                  }",
		"                  &::after {",
		"                        border-bottom: 5px solid red;",
		"                  }",
		"            }",
		"      }      ",
		"      & tr:last-child {",
		"                  /* background-color: yellow; */",
		"                  & td:last-child {",
		"                        /* border-bottom: 5px solid red; */",
		"                  }",
		"                  /* Beispiel: Hintergrundfarbe des letzten tr-Elements ändern */",
		"            }",
		"",
		"      tr {",
		"            position: relative;",
		"            /* box-shadow: var(--clr-table-cells-shadow); */",
		"      }",
		"      th {  ",
		"            position: relative;",
		"            /* box-shadow: var(--clr-table-cells-shadow); */",
		"            /* color: red; */",
		"            @container (width < 400px) {",
		"                  display: none;",
		"            }",
		"      }",
		"      td {",
		"            position: relative;",
		"            box-shadow: var(--clr-table-cells-shadow);",
		"            align-items: center;",
		"            /* color: red; */",
		"            @container (width < 400px) {",
		"                  display: grid;",
		"                  grid-template-columns: auto 1fr;",
		"            /* padding-left: var(--bq-mobile-heading-width); */",
		"                  &::before {",
		"                        font-size: clamp(1.25em, 1.75em, 3.5vw);",
		"                        content: attr(data-cell) \": \";",
		"                        text-transform: capitalize;",
		"                        place-self: center;",
		"                        padding: 0.4em 0.4em;",
		"                  }",
		"                  &::after {",
		"                        content:\"\";",
		"                        position: absolute;",
		"                        width: 100%;",
		"                        height: 100%;",
		"                        /* box-shadow: var(--clr-table-cells-shadow); */",
		"                        left: calc(100% + var(--left-unchecked));",
		"                        top: var(--top-unchecked, --_top);",
		"",
		"                  }",
		"                  &:empty {",
		"                        /* Max-height 0 , weil ",
		"                              wenn es das letzte ",
		"                        */",
		"                        max-height: 0px;",
		"                  }",
		"            }",
		"      }",
		"",
		"      @container (width < 400px) {",
		"            display: grid;",
		"            row-gap: 1rem;",
		"      }",
		"}",
		"",
		"",
		"/* Das ist eine Option um eine Checkbox zu Nutzen oder vllt ein Icon einzufügen */",
		"                              /* custom-table {",
		"                                    td {",
		"                                    &::after {",
		"                                                content: \"\";",
		"                                                position: absolute;",
		"                                                width: 100%;",
		"                                                height: 100%;",
		"                                                box-shadow: var(--clr-table-cells-shadow);",
		"                                                left: calc(100% + var(--left-unchecked));",
		"                                                top: var(--top-unchecked);",
		"                                                border-left: 2px solid green;",
		"                                          }",
		"                                    }",
		"                                    td[checked=\"true\"] {",
		"                                          &::after {",
		"                                                --left-unchecked: 0px;",
		"                                                --top-unchecked: 0px;",
		"                                          }",
		"                                    }",
		"                                    td[checked=\"false\"] {",
		"                                          &::after {",
		"                                                --left-unchecked: 5px;",
		"                                                --top-unchecked: 0px;",
		"                                          }",
		"",
		"                                    }",
		"                              } */",
		"",
		"/* Desktop Mode Start */",
		""
	],
	"description": "TableBackup"
},
"Bordertest": {
	"prefix": "bordertest",
	"body": [
		"     border: 1px solid hsl(211, 45%, 41%);"
	],
	"description": "Bordertest"
},
"ClipPathBorder": {
	"prefix": "clip-path-border",
	"body": [
		".clip-path-border {",
		"    margin: 2px 2px 0px 2px;  ",
		"    grid-area: host;",
		"    filter: drop-shadow(0px 0px 2px yellow);",
		"        &::after {",
		"        content: '';",
		"        width: 100%;",
		"        height: 100%;",
		"        position: absolute;",
		"        clip-path: polygon(",
		"        0% var(--layout-hyp),",
		"        var(--layout-hyp) 0,",
		"        calc(100% - var(--layout-hyp-half)) 0,",
		"        100% var(--layout-hyp-half),",
		"        100% calc(100% - var(--height-current-page)),",
		"        calc(100% - calc(var(--current-page-width) - var(--current-page-center-hyp))) calc(100% - var(--height-current-page)),",
		"        calc(100% - calc(var(--current-page-width) + var(--current-page-center-hyp))) 100%,",
		"        0% 100%",
		"        )",
		"        ;",
		"        background: hsl(0, 0%, 18%);",
		"        transition: all 500ms ease;",
		"        }",
		"              ",
		"}"
	],
	"description": "ClipPathBorder"
},
}

